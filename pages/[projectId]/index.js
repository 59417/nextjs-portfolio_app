import Head from 'next/head'
import { Fragment } from 'react'
import classes from '../../styles/Project.module.css'
import NavigateHeader from '../../components/header/NavigateHeader'
import Details from '../../components/project/Details'
import { FrontData, BusinessData } from '../../components/data'

export default function Project(props) {
  const data = [...FrontData, ...BusinessData].find(
    obj => obj.id === props.projectId,
  )
  // console.log(data, props.projectId);
  return (
    <Fragment>
      <Head>
        <title>Yi-Ching Portfolio</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="initial-scale=1.0, width=device-width" />
        <link rel="icon" href="/17icon.png" />
        <link
          rel="stylesheet"
          href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css"
        />
      </Head>

      <header className={classes.header}>
        <NavigateHeader />
      </header>

      <main className={classes.main}>
        <Details data={data} />
        {/* <div className={classes.body_container}>{props.projectData}</div> */}
      </main>

      <footer className={classes.footer}>
        <a
          href="https://github.com/59417"
          target="_blank"
          rel="noopener noreferrer"
        >
          &copy; 2022 Yi-Ching
          <span className={classes.logo}>
            <i className="fab fa-github"></i>
          </span>
        </a>
      </footer>
    </Fragment>
  )
}

export async function getStaticPaths() {
  const arr0 = Array.from({ length: 3 }, (_, i) => i + 1)
  const arr00 = arr0.map(ele => '0-' + ele.toString())
  const arr1 = Array.from({ length: 6 }, (_, i) => i + 1)
  const arr11 = arr1.map(ele => '1-' + ele.toString())
  const arr = [...arr00, ...arr11]

  return {
    fallback: false, // true: immediately return an empty page
    // fallback: false,  // if user enter an url not included > return 404
    paths: arr.map(ele => ({
      params: {
        projectId: ele.toString(),
      },
    })),
  }
}

export async function getStaticProps(context) {
  const projectId = context.params.projectId
  return {
    props: { projectId: projectId },
  }
}
